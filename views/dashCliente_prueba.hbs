

{{!-- /////  Comienza el milton que viene de NH --}}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

{{!--
****************************************************************************
*                             Tabulator Library                            *
****************************************************************************
 --}}

{{!-- <link href="dist/css/tabulator_modern.css" rel="stylesheet"> --}}
<link href="dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="dist/js/tabulator.min.js"></script>

{{!--
****************************************************************************
*                                    CSS                                   *
****************************************************************************
 --}}

<style>
.button {
  background-color: #4CAF50;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}
</style>

{{!--
****************************************************************************
*                           Funciones para tabla                           *
****************************************************************************
--}}

<script type="text/javascript">

const PARABOLA_SIN_RADOME      = "Parabólica sin radome"
const PARABOLA_ESCUDO_PLANO    = "Parabólica con escudo plano";
const PARABOLA_CON_RADOME = "Parabólica con radome"
const PARABOLA_GRILLADA  = "Parabólica grillada"
const RRU                  = "RRU"
const SECTORIAL            = "Sectorial"
const OMNIDIRECCIONAL      = "Omnidireccional"

const NULL_DATA = "***"

const LISTA_ANTENAS_DIAMETRO =
  [PARABOLA_SIN_RADOME, PARABOLA_ESCUDO_PLANO, PARABOLA_CON_RADOME, PARABOLA_GRILLADA];
const LISTA_ANTENAS_LARGO_ANCHO =
  [RRU, SECTORIAL, OMNIDIRECCIONAL];

function clearTable() {
// Limpiar Tabla

  table.clearData();
};

function addRow() {
// Agregar fila
   table.addRow({"accion":"agregar"});
};

function bajar(id) {
// Función de limpiar la data 

var id=id+1;
var picoteo1;
var picotex;
var picotem;
var clasifPrinc;
var aqui,n,n2,n3,n4,n5,comienza,termina;
var alto,ancho,diametro,cantidad;
var fila=document.getElementById("equipos_existentes").rows[id];
var descripcion=document.getElementById("equipos_existentes").rows[id].cells[1].innerHTML; 
var descParseada;   
picoteo1=descripcion.indexOf(" ");
picotex=descripcion.indexOf("x");
picotem=descripcion.indexOf("m");
clasifPrinc=descripcion.substr(0, picoteo1).toLowerCase();

if(clasifPrinc.indexOf("sectorial")===0||clasifPrinc.indexOf("ruu")===0||clasifPrinc.indexOf("rru")===0||clasifPrinc.indexOf("omni")===0||clasifPrinc.indexOf("bts")===0||clasifPrinc.indexOf("filtro")===0||clasifPrinc.indexOf("cobertura")===0||clasifPrinc.indexOf("panel")===0){
comienza=descripcion.substr(0, picotex);
aqui=comienza.lastIndexOf(".",picotex);
n2=aqui-1;
n3=aqui+3;
n4=picotex+1;
n5=n4+4;
termina=descripcion.substr(n4, 5);
alto=comienza.substr(n2,n3);
cantidad=fila.cells[4].innerHTML
cantidad=Number(cantidad);

 if(clasifPrinc.indexOf("ruu")===0||clasifPrinc.indexOf("rru")===0){
    clasifPrinc="RRU";   
  }
  if(clasifPrinc.indexOf("omni")===0){
    clasifPrinc="Omnidireccional"; 
  }

  if(clasifPrinc.indexOf("sectorial")===0||clasifPrinc.indexOf("bts")===0||clasifPrinc.indexOf("filtro")===0||clasifPrinc.indexOf("cobertura")===0||clasifPrinc.indexOf("panel")===0){
    clasifPrinc="Sectorial"; 
  }



table.addRow({"antena":clasifPrinc,"cantidad":cantidad,"altura":fila.cells[3].innerHTML,"largo":alto,"ancho":termina,"diametro":"***","accion":"bajar"});
}


if(clasifPrinc.indexOf("mmoo")===0||clasifPrinc.indexOf("yagui")===0||clasifPrinc.indexOf("mmoo_sin_radomo")===0||clasifPrinc.indexOf("mmoo_radomo_plano")===0){
  

  if(clasifPrinc.indexOf("mmoo_sin_radomo")===0){
    clasifPrinc="Parabólica sin radome";   
  }
  if(clasifPrinc.indexOf("mmoo_radomo_plano")===0){
    clasifPrinc="Parabólica con escudo plano";   
  }
  if(clasifPrinc.indexOf("mmoo_radomo_esferico")===0){
    clasifPrinc="Parabólica con radome";   
  }
 
  if(clasifPrinc.indexOf("yagui")===0){
    clasifPrinc="Parabólica grillada";   
  }
  else{
    clasifPrinc="Parabólica sin radome"; 
  }
    termina=descripcion.substr(0, picotem);
    n2=picotem-6;
    n3=picotem-1;
    diametro=descripcion.substr(n2, n3).toLowerCase();
    diametro=diametro.replace("e", "");
    diametro=diametro.replace("d", "");
    diametro=diametro.replace("m", "");
    diametro=diametro.replace("ra", "");
    diametro=diametro.replace("o", "");
    diametro=diametro.replace("sin", "");
    diametro=diametro.replace("ic", "");
    cantidad=fila.cells[4].innerHTML;
    cantidad=Number(cantidad);
console.log("Id del elemento :"+(id)+" diametro : "+Number(diametro)+" Descripción  = "+clasifPrinc);
table.addRow({"antena":clasifPrinc,"cantidad":cantidad,"altura":fila.cells[3].innerHTML,"largo":"***","ancho":"***","diametro":diametro,"accion":"bajar"});
}
document.getElementById('boton_bajar').closest('tr').remove();;
};



function modificar(id) {
// Función de limpiar la data 

var id=id+1;
var picoteo1;
var picotex;
var picotem;
var clasifPrinc;
var aqui,n,n2,n3,n4,n5,comienza,termina;
var alto,ancho,diametro,cantidad;
var fila=document.getElementById("equipos_existentes").rows[id];

var descripcion=document.getElementById("equipos_existentes").rows[id].cells[1].innerHTML; 
var descParseada;   
picoteo1=descripcion.indexOf(" ");
picotex=descripcion.indexOf("x");
picotem=descripcion.indexOf("m");
clasifPrinc=descripcion.substr(0, picoteo1).toLowerCase();


if(clasifPrinc.indexOf("sectorial")===0||clasifPrinc.indexOf("ruu")===0||clasifPrinc.indexOf("rru")===0||clasifPrinc.indexOf("omni")===0||clasifPrinc.indexOf("bts")===0||clasifPrinc.indexOf("filtro")===0||clasifPrinc.indexOf("cobertura")===0||clasifPrinc.indexOf("panel")===0){
comienza=descripcion.substr(0, picotex);
aqui=comienza.lastIndexOf(".",picotex);
n2=aqui-1;
n3=aqui+3;
n4=picotex+1;
n5=n4+4;
termina=descripcion.substr(n4, 5);
alto=comienza.substr(n2,n3);
cantidad=fila.cells[4].innerHTML
cantidad=Number(cantidad);

 if(clasifPrinc.indexOf("ruu")===0||clasifPrinc.indexOf("rru")===0){
    clasifPrinc="RRU";   
  }
  if(clasifPrinc.indexOf("omni")===0){
    clasifPrinc="Omnidireccional"; 
  }

  if(clasifPrinc.indexOf("sectorial")===0||clasifPrinc.indexOf("bts")===0||clasifPrinc.indexOf("filtro")===0||clasifPrinc.indexOf("cobertura")===0||clasifPrinc.indexOf("panel")===0){
    clasifPrinc="Sectorial"; 
  }



table.addRow({"antena":clasifPrinc,"cantidad":cantidad,"altura":fila.cells[3].innerHTML,"largo":alto,"ancho":termina,"diametro":"***","accion":"bajar"});
table.addRow({"antena":clasifPrinc,"largo":alto,"ancho":termina,"diametro":"***","accion":"agregar"});
}


if(clasifPrinc.indexOf("mmoo")===0||clasifPrinc.indexOf("yagui")===0||clasifPrinc.indexOf("mmoo_sin_radomo")===0||clasifPrinc.indexOf("mmoo_radomo_plano")===0){
  

  if(clasifPrinc.indexOf("mmoo_sin_radomo")===0){
    clasifPrinc="Parabólica sin radome";   
  }
  if(clasifPrinc.indexOf("mmoo_radomo_plano")===0){
    clasifPrinc="Parabólica con escudo plano";   
  }
  if(clasifPrinc.indexOf("mmoo_radomo_esferico")===0){
    clasifPrinc="Parabólica con radome";   
  }
 
  if(clasifPrinc.indexOf("yagui")===0){
    clasifPrinc="Parabólica grillada";   
  }
  else{
    clasifPrinc="Parabólica sin radome"; 
  }
termina=descripcion.substr(0, picotem);

n2=picotem-6;
n3=picotem-1;


diametro=descripcion.substr(n2, n3).toLowerCase();
diametro=diametro.replace("e", "");
diametro=diametro.replace("d", "");
diametro=diametro.replace("m", "");
diametro=diametro.replace("ra", "");
diametro=diametro.replace("o", "");
diametro=diametro.replace("sin", "");
diametro=diametro.replace("ic", "");
cantidad=fila.cells[4].innerHTML;
cantidad=Number(cantidad);


console.log("Id del elemento :"+(id)+" diametro : "+Number(diametro)+" Descripción  = "+clasifPrinc);
table.addRow({"antena":clasifPrinc,"cantidad":cantidad,"altura":fila.cells[3].innerHTML,"largo":"***","ancho":"***","diametro":diametro,"accion":"bajar"});
table.addRow({"antena":clasifPrinc,"largo":"***","ancho":"***","diametro":diametro,"accion":"agregar"});
}


document.getElementById('boton_bajar').closest('tr').remove();

};

function postData(path, method) {
var data_array = table.getData(); 
var getnorma = document.getElementById("norma");
var getviento = document.getElementById("viento");
var getnorma = document.getElementById("norma");
var getid = document.getElementById("idMC");
var getalturatorre = document.getElementById("alturaTorre");
var getcodigo = document.getElementById("codigo");
var getfu = document.getElementById("fu");
var gethielo = document.getElementById("hielo");
var getfecha = document.getElementById("fecha");
var getlugar = document.getElementById("lugar");
var getMomento = document.getElementById("momento");
var getCorte = document.getElementById("corte");
var getcondicion_viento = document.getElementById("condicion_viento");  
var gettipo = document.getElementById("tipo");
var token = localStorage.getItem("token");

var adicional=data_array.push({
  norma:getnorma.value,
  viento:getviento.value,
  idMC:getid.value,
  alturaTorre:getalturatorre.value,
  codigo:getcodigo.value,
  fu:getfu.value,
  fecha:getfecha.value,
  hielo:gethielo.value,
  lugar:getlugar.value,
  momento:getMomento.value,
  corte:getCorte.value,
  tipo:gettipo.value,
  token:token.value,
  });

var enviar =JSON.stringify(data_array);
method = "post";
var path=path;
var form = document.createElement("form");
form.setAttribute("method", method);
form.setAttribute("action", path);
var hiddenField = document.createElement("input");
hiddenField.setAttribute("type", "hidden");
hiddenField.setAttribute("name", "armando");
hiddenField.setAttribute("value", enviar);
form.appendChild(hiddenField);
document.body.appendChild(form);
form.submit();
};

function mostrar(){
  var cuenta = document.getElementById("equipos_existentes").rows;
  for (i=1;i<(cuenta.length);i++){
    console.log (document.getElementById("equipos_existentes").rows[i].cells[1].innerHTML);
    }

};
  
  function post(path, params, method) {

    method = method || "post"; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);
            form.appendChild(hiddenField);
        }
    }

    document.body.appendChild(form);
    form.submit();

}



var cell = null;

function cellClick(cell_event) {
// Funcion que mantiene las celdas disponibles según el tipo de antena.
// Ej: Antenas sectoriales necesitan largo y ancho pero no diámetro.

  console.log("Antena seleccionada");
  var row = cell_event.getRow();
  var cell = row.getCell("antena");
  var value = cell.getValue();

  if (LISTA_ANTENAS_DIAMETRO.includes(value)) {

    console.log("Antena tiene diametro...")
    var cell_largo = row.getCell("largo");
    cell_largo.setValue(NULL_DATA, null);

    cell_ancho = row.getCell("ancho");
    cell_ancho.setValue(NULL_DATA, null);

    cell = cell_ancho;
  }

  else {

    console.log("Antena tiene largo y ancho...")
    var cell_diametro = row.getCell("diametro");
    cell_diametro.setValue(NULL_DATA, null);
  }
};

</script>

{{!--
****************************************************************************
*                                   BODY                                   *
****************************************************************************
 --}}

{{> head }}
{{!-- <body onload="mostrar()"> --}}
{{> navbarclient }}
<div class="container-fluid">
  <p class="lead">Hola {{nombre}} </p>
</div>

<div class="jumbotron">
        <h4 class="display-3">Análisis de Factores de Utilización</h4>
            <h1 class="display-7" align ='right'> {{> version }}</h1>
</div>
<div class="container">

<h1 class="display-6">Estado actual de las estructuras</h1>
          <p class="lead">Datos sobre la memoria de cálculo base </p>

   <table border="1" >
 {{#each band.nombre1}}
  <tr>
    <td><strong>Lugar </strong>    </td><td><strong>{{general.nombreSitio}} </strong></td>
 </tr>
 <tr>
    <td><strong>Estudio </strong>    </td><td>{{general.codigo}}</td>
 </tr>
 <tr>
    <td><strong>Realizado </strong>    </td><td>{{general.fecha}}</td>
 </tr>
 <tr>
    <td><strong>Bajo la norma</strong>     </td><td>{{general.norma}}</td>
 </tr>
 <tr>
    <td><strong>Condición del  viento</strong>     </td><td>{{general.viento}}</td>
 </tr>
 <tr>
    <td><strong>Factor utilizacion (%) </strong>     </td><td>{{general.fu}}</td>
 </tr>
  {{/each}}
 </table>

<table>

           
<div >          

<tr>
  <td><div>
<p class="lead">Equipamento existente</p>
         <table id="equipos_existentes" border="1" >   
    <tr>
   <td><strong>id</strong></td> <td><strong>Tipo</strong></td>  <td><strong>Orientación</strong></td><td><strong>Altura</strong></td><td><strong>cantidad</strong></td>
  </tr>
{{#each band.nombre2}}      
  <tr>  
    <td>{{@index}} </td>  <td id="valorestd">{{antena.descripcion}} </td> <td>{{antena.orientacion}}</td> <td>{{antena.alto}}</td> <td>{{antena.cantidad}}</td>
  </tr>   
{{/each}}
</table> 
</div></td>
<td>
  <div id="equipos"></div>
</td>
</tr>

</table>



</div> 


<p></p>




<p></p>
<p></p>




{{!--
****************************************************************************
*                          Acá se inserta la tabla                         *
****************************************************************************
--}}


<div class="jumbotron" >
<h1 class="display-6">Modificiaciones </h1>
<div >




 <div class="row content">
  <div class="col-19">
  <table>
   
    <p></p>
<p class="lead">SELECCIONA EQUIPOS EXISTENTES</p>

        <table id="el_mio" border="1" >   
          <tr>
            <td><strong>Tipo</strong></td><td><strong>Altura</strong></td><td><strong>Cantidad</strong></td><td><strong>Dar de baja equipo </strong></td><td><strong>Modificar equipo en la torre</strong></td>
          </tr>
          {{#each band.nombre2}}      
          <tr>  
            <td id="valorestd">{{antena.descripcion}} </td><td id=antennaDescargando>{{antena.alto}} </td>  <td>{{antena.cantidad}}</td> <td id= "boton_bajar"><button class="button" type="button" onclick="bajar({{@index}})">Bajar este equipo de la torre</button></ul></td><td id= "boton_modificar"><button class="button" type="button" onclick="modificar({{@index}})">Modificar equipo en torre</button></ul></td>
          </tr>   
          {{/each}}
        </table> 


  </div>
 <div class="col-1">
   <p></p>
   <p></p>
   <p></p>
   <p></p>
   <p></p>
      <p></p>
   <p></p>
   <p></p>
   <p></p>
   <p></p>

   <h4 class="display-3">=></h4>
   </div>

   
<div class="col-4">
<p class="lead">TABLA DE CAMBIOS A IMPLEMENTAR</p>
    <div id="add-table"></div>
    <form action="/resultadoAS_pruebas" method="POST">
    <button class="button" type="button" onclick="clearTable()">Borrar todo</button>
    <button class="button" type="button" onclick="addRow()">Añadir equipo</button>
    <button class="button" type="button" onclick="postData('/resultadoAS_pruebas')">CALCULAR</button>
    </form>


</div>

 </div>



  
    
 

  </div>


</div>




{{!-- Botones --}}





<br><br>

{{!-- Tabla --}}


</div>



<div>

</div>


{{!--
****************************************************************************
*                         Carga de datos iniciales                         *
****************************************************************************
 --}}

<script type="text/javascript">
// Ejemplo de carga de datos iniciales
var tableData = [
    {antena:   SECTORIAL,
     cantidad: "2",
     altura:   "42",
     largo:    "0.200",
     ancho:    "0.170",
     diametro: NULL_DATA,
     accion: "agregar"
     },

    {antena:   PARABOLA_ESCUDO_PLANO,
     cantidad: "3",
     altura:   "36",
     largo:    NULL_DATA,
     ancho:    NULL_DATA,
     diametro: "1.2",
     accion: "agregar"
     },
]



var table = new Tabulator("#add-table", {
  cellEdited : function(cell) {cellClick(cell)},

  data:             tableData,    // ** set initial table data  **
  layout:           "fitColumns", // fit columns to width of table
  responsiveLayout: "hide",       // hide columns that dont fit on the table
  tooltips:         true,         // show tool tips on cells
  addRowPos:        "bottom",     // when adding a new row, add it to the top of the table
  history:          true,         // allow undo and redo actions on the table
  // pagination:"local",          // paginate the data
  paginationSize:   200,          // allow 200 rows per page of data (NHs)
  movableColumns:   true,         // allow column order to be changed
  resizableRows:    true,         // allow row order to be changed
  // initialSort:[                // set the initial sort order of the data
  //   {column:"rownum", dir:"asc"},
  // ],
  columns:[                 //define the table columns
    {title: "Id", formatter:"rownum", align:"center", width:40},
    {title:"Tipo de Antena", field:"antena",validator:"required"  , editor:"select",
      editorParams:{ "Parabólica sin radome"    : PARABOLA_SIN_RADOME,
                    "Parabólica con escudo plano" : PARABOLA_ESCUDO_PLANO,
                    "Parabólica con radome"   : PARABOLA_CON_RADOME,
                    "Parábolica grillada"     : PARABOLA_GRILLADA,
                    "RRU"               : RRU,
                    "Sectorial"         : SECTORIAL,
                    "Omnidireccional"   : OMNIDIRECCIONAL
                    },
    },
    {title:"Cantidad",     field:"cantidad", editor:"input",validator:"numeric"},
    {title:"Altura [m]",   field:"altura",   editor:"input",validator:"numeric"},
    {title:"Largo [m]",    field:"largo",    editor:"input",validator:"numeric"},
    {title:"Ancho [m]",    field:"ancho",    editor:"input",validator:"numeric"},
    {title:"Diámetro [m]", field:"diametro", editor:"input",validator:"numeric"},
    {title:"Acción a tomar", field:"accion" },
  ],
});





</script>

{{!-- ---------------------------------------------------------------- --}}


<input id="tokentxt" name="token" type="hidden" value="{{token}}"> <br>
</div>
    <div >
        <form action="/../resultadoAS" method="POST" id="prueba">
     
        <div class="input-group">
          {{#each band.nombre1}}
          <input type="hidden" id="viento" name="viento" value={{general.viento}}>
          <input type="hidden" id="norma"  name="norma" value={{general.norma}}>
          <input type="hidden" id="idMC"  name="id_hist_mc" value={{general.id_hist_mc}}>
          <input type="hidden" id="alturaTorre"  name="altura_torre" value={{general.altura_torre}}>
          <input type="hidden" id="codigo"  name="codigo" value={{general.codigo}}> 
          <input type="hidden" id="fu"  name="fu" value={{general.fu}}>
          <input type="hidden" id="hielo"  name="hielo" value={{general.hielo}}> 
          <input type="hidden" id="fecha" name="fecha" value={{general.fecha}}>
          <input type="hidden" id="lugar" name="lugar" value={{general.nombreSitio}}>
          <input type="hidden" id="momento" name="momento" value={{general.momento_basal}}>
          <input type="hidden" id="corte" name="corte" value={{general.corte_basal}}>
          <input type="hidden" id="tipo" name="tipo" value={{general.tipo}}>
          <input type="hidden" id="prooffLEO" name="prooffLEO" value={{band.nombre1}}>
          <input type="hidden" id="condicion_viento" name="condicion_viento" value={{general.viento}}>
          {{/each}}        
        </div>
        
        </form>

    </div>

{{!-- /*//////////////División de sección/////////////////*/ --}}
<hr class="my-4"> 

{{> footer}}